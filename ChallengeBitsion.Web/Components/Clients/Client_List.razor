@using ChallengeBitsion.Business.Models.Clients
@using ChallengeBitsion.Business.Specifications.Clients
@inject ChallengeBitsion.Business.Interfaces.IClientService Service
@inject NavigationManager navManager

<h3>Listado de Clientes</h3>

<div class="row">
    <div class="col-12 text-right mb-2">
        <a class="btn btn-primary" href="/clients/create">Nuevo</a>
    </div>
</div>
<div class="row">
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Nombre</th>
                <th>Identification</th>
                <th>Edad</th>
                <th>Genero</th>
                <th>Activo</th>
                <th>Acción</th>
            </tr>
        </thead>

        <tbody>
            @foreach (var item in logs)
            {
                <tr>
                    <td>@item.FullName</td>
                    <td>@item.Identification</td>
                    <td>@item.Age</td>
                    @*<td>@item.Gender.Name</td>*@
                    <td>@item.Status</td>
                    <td>
                        <a href="/clients/edit/@item.Id">Editar</a>
                        <a href="/clients/delete/@item.Id">Borrar</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="row">
    <div class="col-12 text-center">
        <button class="btn btn-secondary">Anterior</button>
        <button class="btn btn-secondary">Siguiente</button>
    </div>
</div>

@code {
    private List<ClientDTO> logs = new List<ClientDTO>();

    protected override async Task OnInitializedAsync()
    {
        base.OnInitializedAsync();
        var spec = new ClientsWithGenderPagedSpec(1,10);

        logs = await Service.GetAll(spec);
    }

}